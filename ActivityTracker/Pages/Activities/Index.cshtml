@page "{sortOrder?}"
@model ActivityTracker.Pages.Activities.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Activities</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" asp-for="CurrentFilter" />
            <button class="btn btn-primary">Search</button> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.ActivityNameSort">
                    @Html.DisplayNameFor(model => model.Activity[0].ActivityName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.PointsPerUnitSort">
                    @Html.DisplayNameFor(model => model.Activity[0].PointsPerUnit)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.MaxPointsPerDaySort">
                    @Html.DisplayNameFor(model => model.Activity[0].MaxPointsPerDay)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.ValidFromSort">
                    @Html.DisplayNameFor(model => model.Activity[0].ActivityValidFrom)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.ValidToSort">
                    @Html.DisplayNameFor(model => model.Activity[0].ActivityValidTo)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.UnitSort">
                    @Html.DisplayNameFor(model => model.Activity[0].Unit)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.CustomUnitSort">
                    @Html.DisplayNameFor(model => model.Activity[0].CustomUnit)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Activity)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ActivityName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PointsPerUnit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxPointsPerDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActivityValidFrom)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActivityValidTo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Unit.UnitName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomUnit.CustomUnitName)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ActivityId">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ActivityId">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ActivityId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
